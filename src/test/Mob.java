/*
 * Copyright 2010-2016 the original author or authors.
 * 
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 文件：test.Mob.java
 * 日 期：Fri Jul 19 16:10:44 CST 2013
 */
package test;

import java.io.Serializable;
import org.uorm.orm.annotation.ClassMapping;
import org.uorm.orm.annotation.FieldMapping;

/**
 *
 * this file is generated by the uorm pojo tools.
 *
 * @author <a href="mailto:xunchangguo@gmail.com">郭训常</a>
 * @version 1.0.0
 */
@ClassMapping(tableName = "mob", keyGenerator = "assigend")
public class Mob implements Serializable {
	
	private static final long serialVersionUID = 1L;
	
	public static String PROP_ID = "ID";
	public static String PROP_MOBINDEXERID = "MOBINDEXERID";
	public static String PROP_MODIFIED = "MODIFIED";
	public static String PROP_NAME = "NAME";
	public static String PROP_SMPTEID = "SMPTEID";
	public static String PROP_TYPE = "TYPE";
	
	//primary key field of id
	@FieldMapping(columnName = "ID", columnType = 4, primary = true)
	private Integer id;
	@FieldMapping(columnName = "MOBINDEXERID", columnType = 4)
	private Integer mobindexerid;
	@FieldMapping(columnName = "MODIFIED", columnType = 4)
	private Integer modified;
	@FieldMapping(columnName = "NAME", columnType = 12)
	private String name;
	@FieldMapping(columnName = "SMPTEID", columnType = 12)
	private String smpteid;
	@FieldMapping(columnName = "TYPE", columnType = 4)
	private Integer type;
	
	public Mob() {
		super();
	}

	public Mob(Integer id) {
		this.id = id;
	}

	/**
	 * @return the id
	 */
	public Integer getId() {
		return this.id;
	}
	
	/**
	 * @param id the id to set
	 */
	public void setId(Integer value) {
		this.id = value;
	}

	/**
	 * @return the mobindexerid
	 */
	public Integer getMobindexerid() {
		return this.mobindexerid;
	}
	
	/**
	 * @param mobindexerid the mobindexerid to set
	 */
	public void setMobindexerid(Integer value) {
		this.mobindexerid = value;
	}

	/**
	 * @return the modified
	 */
	public Integer getModified() {
		return this.modified;
	}
	
	/**
	 * @param modified the modified to set
	 */
	public void setModified(Integer value) {
		this.modified = value;
	}

	/**
	 * @return the name
	 */
	public String getName() {
		return this.name;
	}
	
	/**
	 * @param name the name to set
	 */
	public void setName(String value) {
		this.name = value;
	}

	/**
	 * @return the smpteid
	 */
	public String getSmpteid() {
		return this.smpteid;
	}
	
	/**
	 * @param smpteid the smpteid to set
	 */
	public void setSmpteid(String value) {
		this.smpteid = value;
	}

	/**
	 * @return the type
	 */
	public Integer getType() {
		return this.type;
	}
	
	/**
	 * @param type the type to set
	 */
	public void setType(Integer value) {
		this.type = value;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object o) {
		if ((o == null) || !(o instanceof Mob)) {
			return false;
		}
		Mob other = (Mob)o;
		if (null == this.id) {
			if (other.id != null)
				return false;
		} else if (!this.id.equals(other.id))
			return false;
		return true;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}
	
}